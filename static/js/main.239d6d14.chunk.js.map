{"version":3,"sources":["style/lib/mainItems.module.css","components/Spinner.js","components/movieComponents/MovieItems.js","components/movieComponents/MoviemainItems.js","lib/data.js","lib/style_data.js","components/movieComponents/MovieList.js","components/movieComponents/MovieDetailItems.js","components/movieComponents/Movie_detailed.js","components/tvComponents/TvmainItems.js","components/tvComponents/TvItems.js","components/tvComponents/TvList.js","components/tvComponents/TvDetailItems.js","components/tvComponents/Tv_detailed.js","App.js","reportWebVitals.js","index.js","style/lib/Items.module.css","style/lib/detail.module.css","style/movieStyles/MovieList.module.css"],"names":["module","exports","LoadingContainer","styled","div","Spinner","type","color","height","width","MovieItems","movie_id","title","poster","release_date","className","styles","Container","exact","to","thumbnail","src","alt","style","contents","MoviemainItems","overview","description","summary","usePromise","promiseCreator","useState","loading","setLoading","movies","setMovies","error","setError","useEffect","a","fetchData","APIKey","language","Wrap","Main_Wrap","settings","dots","arrows","infinite","speed","slidesToShow","slidesToScroll","settings_main","autoplay","autoplaySpeed","pauseOnHover","MovieList","apiAddress","axios","get","loading1","main","error1","loading2","popular","error2","loading3","top_rated","error3","loading4","upcoming","error4","movieContainer","data","results","slice","map","movie","id","poster_path","length","MovieDetailItems","genres_list","vote_average","runtime","videos_list","similar_list","container","desc_container","genres","detail","preview","videoList","similar","similarList","Movie_detailed","useParams","movieDetail_res","movieVideos_res","movieSimilar_res","genre","name","video","index","key","frameBorder","allowFullScreen","cursor","TvmainItems","tv_id","first_air_date","TvItems","TvList","on_the_air","console","log","tvContainer","tv","TvDetailItems","number_of_seasons","number_of_episodes","creditCast_list","creditCrew_list","creditCast","creditCrew","Tv_detailed","tvDetail_res","tvCredit_res","tvSimilar_res","cast","credit","profile_path","background","known_for_department","crew","lineHeight","onClick","window","location","replace","App","path","component","render","props","match","params","march","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.239d6d14.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"mainItems_Container__hPNN_\",\"description\":\"mainItems_description__2xbj7\",\"release_date\":\"mainItems_release_date__1o0br\",\"summary\":\"mainItems_summary__2bxcc\",\"overview\":\"mainItems_overview__BkN37\"};","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport styled from 'styled-components';\n\nconst LoadingContainer = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst Spinner = () => {\n  return (\n    <LoadingContainer>\n      <Loader type=\"Puff\" color=\"#00BFFF\" height={150} width={150} />\n    </LoadingContainer>\n  );\n};\n\nexport default Spinner;\n","import React from 'react';\nimport styles from '../../style/lib/Items.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst MovieItems = ({ movie_id, title, poster, release_date }) => {\n  return (\n    <div className={styles.Container}>\n      <NavLink exact to={`/movie/` + movie_id}>\n        {poster && (\n          <div className={styles.thumbnail}>\n            <img\n              src={poster}\n              alt=\"poster\"\n              style={{ width: '200px', height: '300px' }}\n            />\n          </div>\n        )}\n      </NavLink>\n      <div className={styles.contents}>\n        <h3>{title}</h3>\n        <p>{release_date}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieItems;\n","import React from 'react';\nimport styles from '../../style/lib/mainItems.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst MoviemainItems = ({\n  movie_id,\n  title,\n  poster,\n  release_date,\n  overview,\n}) => {\n  return (\n    <div className={styles.Container}>\n      <NavLink exact to={'/movie/' + movie_id}>\n        {poster && (\n          <div className={styles.thumbnail}>\n            <img\n              src={poster}\n              alt=\"poster\"\n              style={{ width: '500px', height: '500px' }}\n            />\n          </div>\n        )}\n      </NavLink>\n      <NavLink exact to={'/movie/' + movie_id}>\n        <div className={styles.description}>\n          <h1>{title}</h1>\n          <p className={styles.release_date}>{release_date}</p>\n          <p className={styles.summary}>줄거리</p>\n          <p className={styles.overview}>{overview}</p>\n        </div>\n      </NavLink>\n    </div>\n  );\n};\n\nexport default MoviemainItems;\n","import React, { useState, useEffect } from 'react';\n\nfunction usePromise(promiseCreator) {\n  const [loading, setLoading] = useState(false);\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const movies = await promiseCreator();\n        setMovies(movies);\n      } catch (e) {\n        setError(e);\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n  return [loading, movies, error];\n}\n\nconst APIKey = '7db3edc572c4459c628c28ce8cec50fa';\nconst language = ['ko-KR', 'pt-US'];\n\nexport { usePromise, APIKey, language };\n","import styled from 'styled-components';\n\nconst Wrap = styled.div`\n  margin: 3% auto;\n  width: 100%;\n  .slick-prev:before {\n    color: gray; // 버튼 색은 검은색으로\n    font-size: 50px;\n  }\n  .slick-prev {\n    z-index: 9999;\n    left: -55px;\n  }\n  .slick-next:before {\n    color: gray; // 버튼 색은 검은색으로\n    font-size: 50px;\n  }\n  .slick-next {\n    z-index: 9999;\n    right: -10px;\n  }\n  h2 {\n    color: white;\n    margin-bottom: 10px;\n  }\n`;\n\nconst Main_Wrap = styled.div`\n  margin: 0 auto;\n  width: 1300px;\n  padding-top: 30px;\n  h2 {\n    margin-bottom: 5px;\n  }\n  .slick-list {\n    width: 1300px;\n    margin-left: 0;\n  }\n  .slick-dots {\n  }\n  .slick-dots li.slick-active button:before {\n    color: white;\n  }\n  .slick-dots button:before {\n    color: white;\n  }\n`;\n\nconst settings = {\n  dots: false,\n  arrows: true,\n  infinite: true,\n  speed: 500,\n  slidesToShow: 6,\n  slidesToScroll: 1,\n};\n\nconst settings_main = {\n  dots: true,\n  arrows: false,\n  autoplay: true,\n  autoplaySpeed: 5000,\n  infinite: true,\n  speed: 2000,\n  slidesToShow: 1,\n  slidesToScroll: 1,\n  pauseOnHover: false,\n};\n\nexport { Wrap, Main_Wrap, settings, settings_main };\n","import React, { useState, useEffect } from 'react';\nimport Loader from '../Spinner';\nimport MovieItems from './MovieItems';\nimport MoviemainItems from './MoviemainItems';\nimport styles from '../../style/movieStyles/MovieList.module.css';\nimport { usePromise, APIKey, language } from '../../lib/data';\nimport { Wrap, Main_Wrap, settings, settings_main } from '../../lib/style_data';\nimport axios from 'axios';\nimport Slider from 'react-slick';\n\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nconst MovieList = () => {\n  const apiAddress = [\n    `https://api.themoviedb.org/3/movie/848278/recommendations?api_key=${APIKey}&language=${language[0]}&page=1`,\n    `https://api.themoviedb.org/3/movie/popular?api_key=${APIKey}&language=${language[0]}&page=1`,\n    `https://api.themoviedb.org/3/movie/top_rated?api_key=${APIKey}&language=${language[0]}&page=1`,\n    `https://api.themoviedb.org/3/movie/upcoming?api_key=${APIKey}&language=${language[0]}&page=1`,\n    `https://api.themoviedb.org/3/movie/now_playing?api_key=${APIKey}&language=${language[0]}&page=1`,\n  ];\n\n  const [loading1, main, error1] = usePromise(() => {\n    return axios.get(apiAddress[0]);\n  });\n  const [loading2, popular, error2] = usePromise(() => {\n    return axios.get(apiAddress[1]);\n  });\n  const [loading3, top_rated, error3] = usePromise(() => {\n    return axios.get(apiAddress[2]);\n  });\n  const [loading4, upcoming, error4] = usePromise(() => {\n    return axios.get(apiAddress[3]);\n  });\n\n  if (loading1 || loading2 || loading3 || loading4) {\n    return <Loader />;\n  }\n\n  if (!main || !popular || !top_rated || !upcoming) {\n    return null;\n  }\n\n  if (error1 || error2 || error3 || error4) {\n    return '에러 발생';\n  }\n\n  return (\n    <div className={styles.movieContainer}>\n      {/* Main */}\n      <Main_Wrap>\n        <Slider {...settings_main}>\n          {main.data.results.slice(0, 5).map((movie) => (\n            <MoviemainItems\n              key={movie.id}\n              movie_id={movie.id}\n              title={movie.title}\n              poster={'https://image.tmdb.org/t/p/w500' + movie.poster_path}\n              release_date={movie.release_date.slice(0, 4)}\n              overview={\n                movie.overview.length < 100\n                  ? movie.overview\n                  : movie.overview.slice(0, 100) + '...'\n              }\n            />\n          ))}\n        </Slider>\n      </Main_Wrap>\n      {/* popular */}\n      <Wrap>\n        <h2>인기</h2>\n        <Slider {...settings}>\n          {popular.data.results.map((movie) => (\n            <MovieItems\n              key={movie.id}\n              movie_id={movie.id}\n              title={\n                movie.title.length < 12\n                  ? movie.title\n                  : movie.title.slice(0, 12) + '...'\n              }\n              poster={'https://image.tmdb.org/t/p/w500' + movie.poster_path}\n              release_date={movie.release_date.slice(0, 4)}\n            />\n          ))}\n        </Slider>\n      </Wrap>\n      {/* top_rated */}\n      <Wrap>\n        <h2>평점 높은 순</h2>\n        <Slider {...settings}>\n          {top_rated.data.results.map((movie) => (\n            <MovieItems\n              key={movie.id}\n              movie_id={movie.id}\n              title={\n                movie.title.length < 12\n                  ? movie.title\n                  : movie.title.slice(0, 12) + '...'\n              }\n              poster={'https://image.tmdb.org/t/p/w500' + movie.poster_path}\n              release_date={movie.release_date.slice(0, 4)}\n            />\n          ))}\n        </Slider>\n      </Wrap>\n      {/* upcoming */}\n      <Wrap>\n        <h2>개봉 예정</h2>\n        <Slider {...settings}>\n          {upcoming.data.results.map((movie) => (\n            <MovieItems\n              key={movie.id}\n              movie_id={movie.id}\n              title={\n                movie.title.length < 12\n                  ? movie.title\n                  : movie.title.slice(0, 12) + '...'\n              }\n              poster={'https://image.tmdb.org/t/p/w500' + movie.poster_path}\n              release_date={movie.release_date.slice(0, 4)}\n            />\n          ))}\n        </Slider>\n      </Wrap>\n    </div>\n  );\n};\n\nexport default MovieList;\n","import React from 'react';\nimport styles from '../../style/lib/detail.module.css';\nimport { AiFillStar } from 'react-icons/ai';\n\nconst MovieDetailItems = ({\n  poster,\n  title,\n  genres_list,\n  vote_average,\n  release_date,\n  runtime,\n  overview,\n  videos_list,\n  similar_list,\n}) => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.thumbnail}>\n        <img width=\"500\" src={'https://image.tmdb.org/t/p/w500' + poster} />\n      </div>\n      <div className={styles.desc_container}>\n        <h1>{title}</h1>\n        <p className={styles.genres}>{genres_list}</p>\n        <p className={styles.detail}>\n          <AiFillStar style={{ color: 'yellow' }} />\n          {vote_average}&nbsp;&nbsp;\n          {release_date}&nbsp;&nbsp;\n          {runtime}min\n        </p>\n        <p className={styles.overview}>{overview}</p>\n        <p className={styles.preview}>Preview</p>\n        <div className={styles.videoList}>\n          {videos_list.length !== 0 ? (\n            videos_list\n          ) : (\n            <p>Sorry, there's no trailer</p>\n          )}\n        </div>\n        <p className={styles.similar}>Similar</p>\n        <div className={styles.similarList}>\n          <ul style={{ width: similar_list.length * 230 }}>{similar_list}</ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetailItems;\n","import React from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { usePromise, APIKey, language } from '../../lib/data';\nimport Loader from '../Spinner';\nimport axios from '../../../node_modules/axios/index';\nimport MovieDetailItems from './MovieDetailItems';\n\nconst Movie_detailed = () => {\n  const params = useParams();\n  const movie_id = params.movie_id;\n  const apiAddress = [\n    `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${APIKey}&language=${language[0]}`,\n    `https://api.themoviedb.org/3/movie/${movie_id}/videos?api_key=${APIKey}&language=${language[0]}`,\n    `https://api.themoviedb.org/3/movie/${movie_id}/similar?api_key=${APIKey}&language=${language[0]}&page=1`,\n  ];\n  //youtube 재생\n  /*\n  https://www.youtube.com/embed/&{비디오 key}?autoplay=0\n  */\n\n  const [loading1, movieDetail_res, error1] = usePromise(() => {\n    return axios.get(apiAddress[0]);\n  });\n  const [loading2, movieVideos_res, error2] = usePromise(() => {\n    return axios.get(apiAddress[1]);\n  });\n  const [loading3, movieSimilar_res, error3] = usePromise(() => {\n    return axios.get(apiAddress[2]);\n  });\n\n  if (loading1 || loading2 || loading3) {\n    return <Loader />;\n  }\n\n  if (!movieDetail_res || !movieVideos_res || !movieSimilar_res) {\n    return null;\n  }\n\n  if (error1 || error2 || error3) {\n    return '에러 발생';\n  }\n\n  const genres_list = movieDetail_res.data.genres.map((genre) => (\n    <span>{genre.name}&nbsp;</span>\n  ));\n\n  const videos_list = movieVideos_res.data.results.map((video, index) => (\n    <div key={index}>\n      <iframe\n        width=\"420\"\n        height=\"300\"\n        src={'https://www.youtube.com/embed/' + video.key + '?autoplay=0'}\n        frameBorder=\"0\"\n        allowFullScreen=\"allowFullScreen\"\n      ></iframe>\n    </div>\n  ));\n\n  const similar_list = movieSimilar_res.data.results.map((similar) => (\n    <li key={similar.id} style={{ cursor: 'pointer' }}>\n      <Link to={'/movie/' + similar.id}>\n        <img\n          width=\"200px\"\n          height=\"300px\"\n          src={'https://image.tmdb.org/t/p/w500' + similar.poster_path}\n        />\n\n        <p style={{ color: 'white' }}>\n          {similar.title.length < 15\n            ? similar.title\n            : similar.title.slice(0, 15) + '...'}\n        </p>\n      </Link>\n    </li>\n  ));\n\n  return (\n    <div>\n      <MovieDetailItems\n        key={movieDetail_res.data.id}\n        poster={\n          `https://image.tmdb.org/t/p/w500` + movieDetail_res.data.poster_path\n        }\n        title={movieDetail_res.data.title}\n        genres_list={genres_list}\n        vote_average={movieDetail_res.data.vote_average}\n        release_date={movieDetail_res.data.release_date.slice(0, 4)}\n        runtime={movieDetail_res.data.runtime}\n        overview={movieDetail_res.data.overview}\n        videos_list={videos_list}\n        similar_list={similar_list}\n      />\n    </div>\n  );\n};\n\nexport default Movie_detailed;\n","import React from 'react';\nimport styles from '../../style/lib/mainItems.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst TvmainItems = ({ tv_id, title, poster, first_air_date, overview }) => {\n  return (\n    <div className={styles.Container}>\n      <NavLink exact to={`/tv/` + tv_id}>\n        {poster && (\n          <div className={styles.thumbnail}>\n            <img\n              src={poster}\n              alt=\"poster\"\n              style={{ width: '500px', height: '500px' }}\n            />\n          </div>\n        )}\n      </NavLink>\n      <NavLink exact to={'/tv/' + tv_id}>\n        <div className={styles.description}>\n          <h1>{title}</h1>\n          <p className={styles.release_date}>{first_air_date}</p>\n          <p className={styles.summary}>줄거리</p>\n          <p className={styles.overview}>{overview}</p>\n        </div>\n      </NavLink>\n    </div>\n  );\n};\n\nexport default TvmainItems;\n","import React from 'react';\nimport styles from '../../style/lib/Items.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst TvItems = ({ tv_id, title, poster, first_air_date }) => {\n  return (\n    <div className={styles.Container}>\n      <NavLink exact to={`/tv/` + tv_id}>\n        {poster && (\n          <div className={styles.thumbnail}>\n            <img\n              src={poster}\n              alt=\"poster\"\n              style={{ width: '200px', height: '300px' }}\n            />\n          </div>\n        )}\n      </NavLink>\n      <div className={styles.contents}>\n        <h3>{title}</h3>\n        <p>{first_air_date}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default TvItems;\n","import React from 'react';\nimport Loader from '../Spinner';\nimport { usePromise, APIKey, language } from '../../lib/data';\nimport { Wrap, Main_Wrap, settings, settings_main } from '../../lib/style_data';\nimport TvmainItems from './TvmainItems';\nimport TvItems from './TvItems';\nimport Slider from 'react-slick';\nimport axios from 'axios';\nimport styles from '../../style/tvStyles/tvContainer.module.css';\n\nconst TvList = () => {\n  const apiAddress = [\n    `https://api.themoviedb.org/3/tv/81356/recommendations?api_key=${APIKey}&language=${language[0]}&page=1`, //main_recommendation\n    `https://api.themoviedb.org/3/tv/popular?api_key=${APIKey}&language=${language[0]}&page=1`, //popular\n    `https://api.themoviedb.org/3/tv/top_rated?api_key=${APIKey}&language=${language[0]}&page=1`, //top_rated\n    `https://api.themoviedb.org/3/tv/on_the_air?api_key=${APIKey}&language=${language[0]}&page=1`, //현재 상영중\n  ];\n\n  const [loading1, main, error1] = usePromise(() => {\n    return axios.get(apiAddress[0]);\n  });\n  const [loading2, popular, error2] = usePromise(() => {\n    return axios.get(apiAddress[1]);\n  });\n  const [loading3, top_rated, error3] = usePromise(() => {\n    return axios.get(apiAddress[2]);\n  });\n  const [loading4, on_the_air, error4] = usePromise(() => {\n    return axios.get(apiAddress[3]);\n  });\n\n  if (loading1 || loading2 || loading3 || loading4) {\n    return <Loader />;\n  }\n\n  if (!main || !popular || !top_rated || !on_the_air) {\n    return null;\n  }\n\n  if (error1 || error2 || error3 || error4) {\n    return '에러 발생';\n  }\n\n  console.log(popular.data.results);\n  console.log(top_rated.data.results);\n  console.log(on_the_air.data.results);\n\n  return (\n    <div className={styles.tvContainer}>\n      {/* Main */}\n      <Main_Wrap>\n        <Slider {...settings_main}>\n          {main.data.results.slice(0, 5).map((tv) => (\n            <TvmainItems\n              key={tv.id}\n              tv_id={tv.id}\n              title={tv.title}\n              poster={'https://image.tmdb.org/t/p/w500' + tv.poster_path}\n              first_air_date={tv.first_air_date.slice(0, 4)}\n              overview={\n                tv.overview.length < 100\n                  ? tv.overview\n                  : tv.overview.slice(0, 100) + '...'\n              }\n            />\n          ))}\n        </Slider>\n      </Main_Wrap>\n      {/* popular */}\n      <Wrap>\n        <h2>인기</h2>\n        <Slider {...settings}>\n          {popular.data.results.map((tv) => (\n            <TvItems\n              key={tv.id}\n              tv_id={tv.id}\n              // title={\n              //   tv.name.length < 12 ? tv.name : tv.name.slice(0, 12) + '...'\n              // }\n              poster={'https://image.tmdb.org/t/p/w500' + tv.poster_path}\n              first_air_date={tv.first_air_date.slice(0, 4)}\n            />\n          ))}\n        </Slider>\n      </Wrap>\n\n      {/* popular */}\n      <Wrap>\n        <h2>평점 높은 순</h2>\n        <Slider {...settings}>\n          {top_rated.data.results.map((tv) => (\n            <TvItems\n              key={tv.id}\n              tv_id={tv.id}\n              title={\n                tv.name.length < 12 ? tv.name : tv.name.slice(0, 12) + '...'\n              }\n              poster={'https://image.tmdb.org/t/p/w500' + tv.poster_path}\n              first_air_date={tv.first_air_date.slice(0, 4)}\n            />\n          ))}\n        </Slider>\n      </Wrap>\n\n      {/* popular */}\n      <Wrap>\n        <h2>현재 상영작</h2>\n        <Slider {...settings}>\n          {on_the_air.data.results.map((tv) => (\n            <TvItems\n              key={tv.id}\n              tv_id={tv.id}\n              title={\n                tv.name.length < 12 ? tv.name : tv.name.slice(0, 12) + '...'\n              }\n              poster={'https://image.tmdb.org/t/p/w500' + tv.poster_path}\n              first_air_date={tv.first_air_date.slice(0, 4)}\n            />\n          ))}\n        </Slider>\n      </Wrap>\n    </div>\n  );\n};\n\nexport default TvList;\n","import React from 'react';\nimport styles from '../../style/lib/detail.module.css';\nimport { AiFillStar } from 'react-icons/ai';\n\nconst TvDetailItems = ({\n  poster,\n  title,\n  genres_list,\n  vote_average,\n  first_air_date,\n  number_of_seasons,\n  number_of_episodes,\n  overview,\n  creditCast_list,\n  creditCrew_list,\n  similar_list,\n}) => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.thumbnail}>\n        <img width=\"500\" src={'https://image.tmdb.org/t/p/w500' + poster} />\n      </div>\n      <div className={styles.desc_container}>\n        <h1>{title}</h1>\n        <p className={styles.genres}>{genres_list}</p>\n        <p className={styles.detail}>\n          <AiFillStar style={{ color: 'yellow' }} />\n          {vote_average}&nbsp;&nbsp;\n          {first_air_date}&nbsp;&nbsp;\n          {number_of_episodes}부작 시즌 {number_of_seasons}개\n        </p>\n        <p className={styles.overview}>{overview}</p>\n        <p className={styles.preview}>인물 정보</p>\n        <p>출연진</p>\n        <div className={styles.creditCast}>{creditCast_list}</div>\n        <p>제작진</p>\n        <div className={styles.creditCrew}>\n          {creditCrew_list.length !== 0 ? creditCrew_list : ''}\n        </div>\n        <p className={styles.similar}>Similar</p>\n        <div className={styles.similarList}>\n          <ul style={{ width: similar_list.length * 230 }}>{similar_list}</ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TvDetailItems;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { usePromise, APIKey, language } from '../../lib/data';\nimport Loader from '../Spinner';\nimport axios from '../../../node_modules/axios/index';\nimport TvDetailItems from './TvDetailItems';\n\nconst Tv_detailed = () => {\n  const params = useParams();\n  const tv_id = params.tv_id;\n  const apiAddress = [\n    `https://api.themoviedb.org/3/tv/${tv_id}?api_key=${APIKey}&language=${language[0]}`,\n    `https://api.themoviedb.org/3/tv/${tv_id}/credits?api_key=${APIKey}&language=${language[0]}`,\n    `https://api.themoviedb.org/3/tv/${tv_id}/similar?api_key=${APIKey}&language=${language[0]}&page=1`,\n  ];\n\n  const [loading1, tvDetail_res, error1] = usePromise(() => {\n    return axios.get(apiAddress[0]);\n  });\n  const [loading2, tvCredit_res, error2] = usePromise(() => {\n    return axios.get(apiAddress[1]);\n  });\n  const [loading3, tvSimilar_res, error3] = usePromise(() => {\n    return axios.get(apiAddress[2]);\n  });\n\n  if (loading1 || loading2 || loading3) {\n    return <Loader />;\n  }\n\n  if (!tvDetail_res || !tvCredit_res || !tvSimilar_res) {\n    return null;\n  }\n\n  if (error1 || error2 || error3) {\n    return '에러 발생';\n  }\n\n  const genres_list = tvDetail_res.data.genres.map((genre) => (\n    <span>{genre.name}&nbsp;</span>\n  ));\n\n  const creditCast_list = tvCredit_res.data.cast.map((credit, index) => (\n    <div key={index}>\n      {credit.profile_path !== null ? (\n        <img\n          width=\"100px\"\n          src={'https://image.tmdb.org/t/p/w500' + credit.profile_path}\n        ></img>\n      ) : (\n        <div width=\"100px\" height=\"150px\" background=\"white\"></div>\n      )}\n      <p>{credit.name}</p>\n      <p>{credit.known_for_department}</p>\n    </div>\n  ));\n  const creditCrew_list = tvCredit_res.data.crew.map((credit, index) => (\n    <div key={index}>\n      {credit.profile_path !== null ? (\n        <img\n          width=\"100px\"\n          src={'https://image.tmdb.org/t/p/w500' + credit.profile_path}\n        ></img>\n      ) : (\n        <div style={{ width: '100px', height: '150px' }}>\n          <p style={{ lineHeight: '150px' }}>no picture</p>\n        </div>\n      )}\n      <p>{credit.name}</p>\n      <p>{credit.known_for_department}</p>\n    </div>\n  ));\n\n  const similar_list = tvSimilar_res.data.results.map((similar) => (\n    <li\n      key={similar.id}\n      onClick={() => {\n        window.location.replace('/tv/' + similar.id);\n      }}\n      style={{ cursor: 'pointer' }}\n    >\n      <img\n        width=\"200px\"\n        height=\"300px\"\n        src={'https://image.tmdb.org/t/p/w500' + similar.poster_path}\n      />\n      <p>\n        {similar.name.length < 15\n          ? similar.name\n          : similar.name.slice(0, 15) + '...'}\n      </p>\n    </li>\n  ));\n\n  return (\n    <div>\n      <TvDetailItems\n        key={tvDetail_res.data.id}\n        poster={\n          `https://image.tmdb.org/t/p/w500` + tvDetail_res.data.poster_path\n        }\n        title={tvDetail_res.data.name}\n        genres_list={genres_list}\n        vote_average={tvDetail_res.data.vote_average}\n        first_air_date={\n          tvDetail_res.data.first_air_date === null\n            ? ''\n            : tvDetail_res.data.first_air_date.slice(0, 4)\n        }\n        number_of_seasons={tvDetail_res.data.number_of_seasons}\n        number_of_episodes={tvDetail_res.data.number_of_episodes}\n        overview={tvDetail_res.data.overview}\n        creditCast_list={creditCast_list}\n        creditCrew_list={creditCrew_list}\n        similar_list={similar_list}\n      />\n    </div>\n  );\n};\n\nexport default Tv_detailed;\n","import React from 'react';\nimport { Route, NavLink, Switch } from 'react-router-dom';\nimport MovieList from './components/movieComponents/MovieList';\nimport Movie_detailed from './components/movieComponents/Movie_detailed';\nimport TvList from './components/tvComponents/TvList';\nimport Tv_detailed from './components/tvComponents/Tv_detailed';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <ul className=\"category\">\n        <li>\n          <NavLink exact to=\"/react-movie-app\">\n            <p className=\"nav_selected\">Movie</p>\n          </NavLink>\n        </li>\n        <li>\n          <NavLink exact to=\"/tv\">\n            <p className=\"nav_selected\">TV</p>\n          </NavLink>\n        </li>\n      </ul>\n      <Switch>\n        <Route exact path=\"/react-movie-app\" component={MovieList} />\n        <Route\n          exact\n          path=\"/movie/:movie_id\"\n          render={(props) => (\n            <Movie_detailed key={props.match.params.movie_id} {...props} />\n          )}\n        />\n        <Route exact path=\"/tv\" component={TvList} />\n        <Route\n          exact\n          path=\"/tv/:tv_id\"\n          component={Tv_detailed}\n          render={(props) => (\n            <Tv_detailed key={props.march.params.tv_id} {...props} />\n          )}\n        />\n        <Route path=\"/\">\n          <h1 className=\"notFound\">Not found :(</h1>\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Items_Container__C9ZsV\",\"contents\":\"Items_contents__1mTdF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"detail_container__32hRP\",\"thumbnail\":\"detail_thumbnail__2rJP2\",\"desc_container\":\"detail_desc_container__3e4wZ\",\"preview\":\"detail_preview__1OAOy\",\"similar\":\"detail_similar__3HpV6\",\"creditCast\":\"detail_creditCast__xhGri\",\"creditCrew\":\"detail_creditCrew__mOdHj\",\"overview\":\"detail_overview__2zWcV\",\"videoList\":\"detail_videoList__1FyQh\",\"similarList\":\"detail_similarList__3UgF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieContainer\":\"MovieList_movieContainer__2NQCV\"};"],"sourceRoot":""}